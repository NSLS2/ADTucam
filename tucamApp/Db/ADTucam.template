# Database of records specific to the Tucam areaDetector driver
# Jakub Wlodek, Thomas Hopkins
# 26 Mar 2024

include "ADBase.template"


###############################################################################
#  Note: The following are records defined in ADBase.template.                #
#        We are changing some of the fields here to reflect valid values for  #
#        tucsen camera
###############################################################################

###############################################################################
#  These records control the data type and color.                             #
###############################################################################

record(mbbo, "$(P)$(R)ColorMode")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "")
   field(ONVL, "")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "")
   field(ONVL, "")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbo, "$(P)$(R)TriggerMode")
{
   field(ZRST, "Free Run")
   field(ZRVL, "0")
   field(ONST, "Standard")
   field(ONVL, "1")
   field(TWST, "Synchronous")
   field(TWVL, "2")
   field(THST, "Global")
   field(THVL, "3")
   field(FRST, "Software")
   field(FRVL, "4")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
   field(ZRST, "Free Run")
   field(ZRVL, "0")
   field(ONST, "Standard")
   field(ONVL, "1")
   field(TWST, "Synchronous")
   field(TWVL, "2")
   field(THST, "Global")
   field(THVL, "3")
   field(FRST, "Software")
   field(FRVL, "4")
}

###############################################################################
# The following records are specific to the Tucsen                            #
# Note that we don't define the choices for mbbo and mbii records here.       #
# These choices are built at iocInit by reading the list of valid choices     #
# from the Tucsen SDK.  This is very nice because they automatically change   #
# depending on the capabilities of the camera.                                #
###############################################################################

###############################################################################
#  These records are additional acquisition parameters                        #
###############################################################################

record(ao, "$(P)$(R)TemperatureSetpoint") {
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEMP_SETPOINT")
   field(VAL, "0")
   field(PINI, "YES")
}

record(ai, "$(P)$(R)TemperatureSetpoint_RBV") {
   field(DTYP, "asynFloat64")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEMP_SETPOINT")
   field(VAL, "0")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)Temperature_RBV") {
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEMP")
   field(SCAN, "I/O Intr")
}

record(bi, "$(P)$(R)TemperatureEmergencySignal_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEMP_EMERGENCY")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(VAL, "0")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)AutoTECThreshold") {
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_TEC_THRESH")
    field(VAL, "0")
    field(PINI, "YES")
}

record(ai, "$(P)$(R)AutoTECThreshold_RBV") {
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_TEC_THRESH")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)AutoTEC") {
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_TEC")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(VAL, "0")
    field(PINI, "YES")
}

record(bi, "$(P)$(R)AutoTEC_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_TEC")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)TEC") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEC_STATUS")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(VAL, "0")
   field(PINI, "YES")
}

record(bi, "$(P)$(R)TEC_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TEC_STATUS")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(VAL, "0")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)GainMode") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_GAIN_MODE")
   field(PINI, "YES")
   field(VAL, "0")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "HDR")
   field(ONST, "HighGain")
   field(TWST, "LowGain")
}

record(mbbi, "$(P)$(R)GainMode_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_GAIN_MODE")
   field(SCAN, "I/O Intr")
   field(VAL, "0")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "HDR")
   field(ONST, "HighGain")
   field(TWST, "LowGain")
}

record(bo, "$(P)$(R)RetryOnTimeout") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_RETRY_ON_TIMEOUT")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(VAL, "0")
   field(PINI, "YES")
}

record(bi, "$(P)$(R)RetryOnTimeout_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_RETRY_ON_TIMEOUT")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(VAL, "0")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)NumRetries") {
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_NUM_RETRIES")
   field(VAL, "0")
   field(PINI, "YES")
}

record(ai, "$(P)$(R)NumRetries_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_NUM_RETRIES")
   field(VAL, "0")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)BinMode") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BIN_MODE")
   field(PINI, "YES")
   field(VAL, "0")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "None")
   field(ONST, "2x2 Bin")
   field(TWST, "4x4 Bin")
}

record(mbbi, "$(P)$(R)BinMode_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BIN_MODE")
   field(SCAN, "I/O Intr")
   field(VAL, "0")
   field(ZRVL, "0")
   field(ONVL, "1")
   field(TWVL, "2")
   field(ZRST, "None")
   field(ONST, "2x2 Bin")
   field(TWST, "4x4 Bin")
}

record(stringin, "$(P)$(R)Bus_RBV")
{
   field(PINI, "YES")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BUS")
}

record(ai, "$(P)$(R)ProductID_RBV")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_PRODUCT_ID")
   field(PREC, "3")
}

record(ai, "$(P)$(R)TransferRate_RBV")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRANSFER_RATE")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)FrameSpeed")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FRAME_SPEED")
}

record(mbbi, "$(P)$(R)FrameSpeed_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FRAME_SPEED")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)BitDepth")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BIT_DEPTH")
}

record(mbbi, "$(P)$(R)BitDepth_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BIT_DEPTH")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)AutoExposure")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_EXPOSURE")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)AutoExposure_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_EXPOSURE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbo, "$(P)$(R)FanGear")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FAN_GEAR")
}

record(mbbi, "$(P)$(R)FanGear_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FAN_GEAR")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)AutoLevels")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_LEVELS")
   field(ZRST, "None")
   field(ZRVL, "0")
   field(ONST, "Left")
   field(ONVL, "1")
   field(TWST, "Right")
   field(TWVL, "2")
   field(THST, "Both")
   field(THVL, "3")
}

record(mbbi, "$(P)$(R)AutoLevels_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_AUTO_LEVELS")
   field(SCAN, "I/O Intr")
   field(ZRST, "None")
   field(ZRVL, "0")
   field(ONST, "Left")
   field(ONVL, "1")
   field(TWST, "Right")
   field(TWVL, "2")
   field(THST, "Both")
   field(THVL, "3")
}

record(mbbo, "$(P)$(R)Histogram")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_HISTOGRAM")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)Histogram_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_HISTOGRAM")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}
record(mbbo, "$(P)$(R)Enhance")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_ENHANCE")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)Enhance_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_ENHANCE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbo, "$(P)$(R)DefectCorrection")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_DEFECT_CORR")
   field(ZRST, "None")
   field(ZRVL, "0")
   field(ONST, "Calculate")
   field(ONVL, "1")
   # TODO: Verify that this should be 3 and not 2
   field(THST, "Correction")
   field(THVL, "3")
}

record(mbbi, "$(P)$(R)DefectCorrection_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_DEFECT_CORR")
   field(SCAN, "I/O Intr")
   field(ZRST, "None")
   field(ZRVL, "0")
   field(ONST, "Calculate")
   field(ONVL, "1")
   # TODO: Verify that this should be 3 and not 2
   field(THST, "Correction")
   field(THVL, "3")
}

record(mbbo, "$(P)$(R)EnableDenoise")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_ENABLE_DENOISE")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)EnableDenoise_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_ENABLE_DENOISE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbo, "$(P)$(R)FlatCorrection")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FLAT_CORR")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Grab frame")
   field(ONVL, "1")
   field(TWST, "Calculate")
   field(TWVL, "2")
   field(THST, "Correction")
   field(THVL, "3")
}

record(mbbi, "$(P)$(R)FlatCorrection_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FLAT_CORR")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Grab frame")
   field(ONVL, "1")
   field(TWST, "Calculate")
   field(TWVL, "2")
   field(THST, "Correction")
   field(THVL, "3")
}

record(mbbo, "$(P)$(R)DynRgeCorrection")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_DYN_RGE_CORR")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)DynRgeCorrection_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_DYN_RGE_CORR")
   field(SCAN, "I/O Intr")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
}

record(mbbo, "$(P)$(R)FrameFormat")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FRAME_FORMAT")
   field(ZRST, "Raw")
   field(ZRVL, "0")
   field(ONST, "Usual")
   field(ONVL, "1")
   field(TWST, "RGB888")
   field(TWVL, "2")
}

record(mbbi, "$(P)$(R)FrameFormat_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_FRAME_FORMAT")
   field(SCAN, "I/O Intr")
   field(ZRST, "Raw")
   field(ZRVL, "0")
   field(ONST, "Usual")
   field(ONVL, "1")
   field(TWST, "RGB888")
   field(TWVL, "2")
}

record(ao, "$(P)$(R)Brightness")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BRIGHTNESS")
}

record(ai, "$(P)$(R)Brightness_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BRIGHTNESS")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)BlackLevel")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BLACK_LEVEL")
}

record(ai, "$(P)$(R)BlackLevel_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_BLACK_LEVEL")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Sharpness")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_SHARPNESS")
}

record(ai, "$(P)$(R)Sharpness_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_SHARPNESS")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)NoiseLevel")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_NOISE_LEVEL")
}

record(ai, "$(P)$(R)NoiseLevel_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_NOISE_LEVEL")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)HDRK")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_HDRK")
}

record(ai, "$(P)$(R)HDRK_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_HDRK")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Gamma")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_GAMMA")
}

record(ai, "$(P)$(R)Gamma_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_GAMMA")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Contrast")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_CONTRAST")
}

record(ai, "$(P)$(R)Contrast_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_CONTRAST")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)LeftLevels")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_LEFT_LEVELS")
}

record(ai, "$(P)$(R)LeftLevels_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_LEFT_LEVELS")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)RightLevels")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_RIGHT_LEVELS")
}

record(ai, "$(P)$(R)RightLevels_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_RIGHT_LEVELS")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)TriggerEdge")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_EDGE")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)TriggerEdge_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_EDGE")
   field(SCAN, "I/O Intr")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(mbbo, "$(P)$(R)TriggerExposure")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_EXP")
   field(ZRST, "Trigger")
   field(ZRVL, "0")
   field(ONST, "Gate")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)TriggerExposure_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_EXP")
   field(SCAN, "I/O Intr")
   field(ZRST, "Trigger")
   field(ZRVL, "0")
   field(ONST, "Gate")
   field(ONVL, "1")
}

record(ao, "$(P)$(R)TriggerDelay")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_DLY")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerDelay_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_DLY")
   field(PREC, "6")
   field(EGU,  "s")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)SoftwareTrigger")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRIG_SOFT")
   field(ZNAM, "Off")
   field(ONAM, "On")
}

record(mbbo, "$(P)$(R)TriggerOut1Mode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_MODE")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbi, "$(P)$(R)TriggerOut1Mode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_MODE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbo, "$(P)$(R)TriggerOut1Edge")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_EDGE")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)TriggerOut1Edge_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_EDGE")
   field(SCAN, "I/O Intr")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(ao, "$(P)$(R)TriggerOut1Delay")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_DLY")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut1Delay_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_DLY")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ao, "$(P)$(R)TriggerOut1Width")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_WIDTH")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut1Width_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT1_WIDTH")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}

record(mbbo, "$(P)$(R)TriggerOut2Mode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_MODE")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbi, "$(P)$(R)TriggerOut2Mode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_MODE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbo, "$(P)$(R)TriggerOut2Edge")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_EDGE")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)TriggerOut2Edge_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_EDGE")
   field(SCAN, "I/O Intr")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(ao, "$(P)$(R)TriggerOut2Delay")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_DLY")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut2Delay_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_DLY")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ao, "$(P)$(R)TriggerOut2Width")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_WIDTH")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut2Width_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT2_WIDTH")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}

record(mbbo, "$(P)$(R)TriggerOut3Mode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_MODE")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbi, "$(P)$(R)TriggerOut3Mode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_MODE")
   field(SCAN, "I/O Intr")
   field(ZRST, "Low")
   field(ZRVL, "0")
   field(ONST, "High")
   field(ONVL, "1")
   field(TWST, "Trigger In")
   field(TWVL, "2")
   field(THST, "Exposure Start")
   field(THVL, "3")
   field(FRST, "Exposure Global")
   field(FRVL, "4")
   field(FVST, "Readout End")
   field(FVVL, "5")
}

record(mbbo, "$(P)$(R)TriggerOut3Edge")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_EDGE")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)TriggerOut3Edge_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_EDGE")
   field(SCAN, "I/O Intr")
   field(ZRST, "FallingEdge")
   field(ZRVL, "0")
   field(ONST, "RisingEdge")
   field(ONVL, "1")
}

record(ao, "$(P)$(R)TriggerOut3Delay")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_DLY")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut3Delay_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_DLY")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ao, "$(P)$(R)TriggerOut3Width")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_WIDTH")
   field(PREC, "6")
   field(EGU,  "s")
}

record(ai, "$(P)$(R)TriggerOut3Width_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TUCAM_TRGOUT3_WIDTH")
   field(SCAN, "I/O Intr")
   field(PREC, "6")
   field(EGU,  "s")
}
